% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stics_wrapper.R
\name{stics_wrapper}
\alias{stics_wrapper}
\title{Running usm(s) from txt input files stored in one directory
per \code{situation}, simulated results are returned in a list}
\usage{
stics_wrapper(
  param_values = NULL,
  sit_var_dates_mask = NULL,
  prior_information = NULL,
  model_options
)
}
\arguments{
\item{param_values}{a named vector containing the value(s) and names of the
parameters to force (optional). It may contains either unique value for each
parameter name or multiple values for each parameter when \code{prior_information}
argument is provided.}

\item{sit_var_dates_mask}{List of situations:
may be either a character vector of situation names or a named list containing
information about variables and dates for which simulated values should be returned.
Typically a list containing the observations to which simulations should be
compared as provided by SticsRFiles::read_obs}

\item{prior_information}{Prior information on the parameters to estimate.
For the moment only uniform distribution are allowed.
Either a list containing (named) vectors of upper and lower
bounds (\code{ub} and \code{lb}), or a named list containing for each
parameter the list of situations per group (\code{sit_list})
and the vector of upper and lower bounds (one value per group) (\code{ub} and \code{lb})}

\item{model_options}{List containing any information needed by the model.
In the case of Stics: \code{stics_path} the path of Stics executable file and
\code{data_dir} the path of the directory containing the Stics input data
for each USM (one folder per USM where Stics input files are stored in txt
format)}
}
\value{
A list containing simulated values (\code{sim_list}: a named list containing
usms outputs data.frames) and a flag (\code{flag_allsim}) indicating if all
required situations, variables and dates were simulated.
Inter-crops are not yet taken into account for extracting output data from files.
}
\description{
This function uses Stics directly through a system call, can
force Stics input parameters with values given in arguments.
}
\examples{

\dontrun{

# Specifying the JavaStics folder
javastics_path <- "/path/to/javastics"

# Setting the model executable path (windows, linux)
stics_path <- file.path(javastics_path, "bin","stics_modulo")

# Setting the input data folder path, root directory of the usms directories
data_path <- "/path/to/usms/subdirs/root"

# Setting the mandatory simulations options
# Running all the usms
sim_options <- stics_wrapper(stics_path = stics_path, data_dir = data_path)

# Running an usm list
usms_list <- c("wheat", "pea", "maize")
sim_options <- stics_wrapper(stics_path = stics_path, data_dir = data_path,
sit_var_dates_mask = usms_list)

}

}
